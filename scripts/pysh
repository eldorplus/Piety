#!/usr/bin/env python
"""
Start a Piety session running an interactive Python interpreter, using
the pysh shell.  You can then use this shell to create and run more tasks.
"""

import sys

import key
import line
import console
import pysh
import piety as p
import terminal # for terminal.set_line_mode

# t is the task running the pysh console via key k
# We will assign handler to k.getchar below.
t = p.Task(name='pysh', event=p.sys.stdin)

# pyshc is the console whose command is the pysh shell
# We name the console object pyshc (final c), different from pysh module
# No resume and pause args needed because no scheduler so no focus needed
pyshc = console.Console(prompt='>> ', command=pysh.mk_shell(), 
                       quit=p.quit, optional_keymap=line.keymap)

# k is the key whose console is pyshc
k = key.Key(pyshc.handle_key)

t.handler = k.getchar

def main():
    pyshc()
    console.Console.continues = True
    p.done = False # reset, might be resuming after p.quit() 
    p.run(nevents=0) # loop forever, don't return
    terminal.set_line_mode()

if __name__ == '__main__':
    main()
