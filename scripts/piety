#!/usr/bin/env python
"""
Start a Piety session running an interactive Python interpreter,, using
the pysht shell.  You can then use this shell to create and run more tasks:

 python -i piety

If you exit from Piety or interrupt it, you will still be in Python
and can resume your Piety session with resume()

You can also start a standalone Piety session at the command line:

 piety

But here, if you exit or interrupt Piety you will also exit Python.  

This file is named 'piety' with no .py extension, so there is no name
clash with the piety module, that is, the file named 'piety.py'
"""

import sys

import console
import pysht
import piety

def run_piety():
    """ 
    Setup terminal and (re)start piety
    We can't call this function piety because it would clash with piety module
    """
    piety.done = False # reset, might be resuming after piety.exit() 
    shell.restart() # clear buffer, print prompt
    piety.run(nevents=0) # loop forever, don't return

resume = run_piety # but not 'r', single-char commands reserved for ed

shell = console.Console(prompt='pysh>> ', command=pysht.mk_shell(), 
                        exiter=piety.exit)
t0 = piety.Task(handler=shell.getchar, event=piety.sys.stdin)

console.focus = shell

if __name__ == '__main__':
    run_piety()
