#!/usr/bin/env python
"""
Run a Piety session including the ed line editor.

Now obsolete.  This module monkeypatches ed.run and ed.q, which works
but is now deprecated.  Instead, use console.Command, see edd for an
example.

Start this script by ./ed not ed because classic ed might be on the PATH.

...$ ./ed
pysh>> piety.run()
...
pysh>> ed.main()
e README.md
.. or enter any other ed.py commands ...
q
pysh>> ^D
...$
"""

import sys

import console
import pysht
import piety
import ed

# shell is the console object whose command is the pysht shell
shell = console.Console(prompt='pysh>> ', command=pysht.mk_shell(), 
                        exiter=piety.exit)
# pysh is the task running the shell console object
pysh = piety.Task(name='pysh', handler=shell.getchar, event=piety.sys.stdin,
                  enabled=(lambda: console.focus == shell))

# editor is the console object whose command is ed 
# must explicitly override default piety> prompt with empty prompt ''
# keep default exiter for emergency escape with ^D
editor = console.Console(prompt='',command=ed.cmd,exiter=piety.exit)
# edit is the task running the editor console object
# don't call it ed because that's the name of the editor module
edit = piety.Task(name='edit', handler=editor.getchar, event=piety.sys.stdin,
                  enabled=(lambda: console.focus == editor))

# call this ed_run because we have another def run() below
def ed_run():
    'revised ed command that changes focus to editor'
    console.change_focus(editor)

# Put this in ed module to distinguish ed.run() from piety run()
# There is no run defined in ed module itself
ed.run = ed_run

def pause():
    'revised q command that returns focus to shell'
    console.change_focus(shell)

ed.q = pause # monkeypatch, replaces old ed.q

# start or restart piety scheduler from python prompt
def run():
    """ 
    setup terminal and (re)start piety
    one command at the python prompt
    """
    piety.done = False # reset, might be resuming after piety.exit() 
    shell.restart() # clear buffer, print prompt
    piety.run(nevents=0) # loop forever, don't return

# start running with focus on piety python shell
console.focus = shell

if __name__ == '__main__':
    run()
